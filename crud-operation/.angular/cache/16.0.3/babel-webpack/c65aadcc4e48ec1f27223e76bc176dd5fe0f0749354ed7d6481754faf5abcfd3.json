{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GetusersComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const person_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r1.password);\n  }\n}\n// import { log } from 'console';\nclass GetusersComponent {\n  constructor(object) {\n    this.object = object;\n    this.getUsers = [];\n    this.getTenUser = [];\n    this.post = [];\n    this.pass = '';\n    this.userName = '';\n  }\n  ngOnInit() {\n    this.object.getDataFromjson().subscribe(data => {\n      this.getTenUser = data;\n    });\n    this.object.getUserFromDatabase().subscribe(data => {\n      this.getUsers = data;\n      // console.warn(this.getUser);\n    });\n  }\n\n  Createauser() {\n    const postUrl = 'http://localhost:3000/adduser';\n    const requestBody = {\n      username: this.userName,\n      password: this.pass\n    };\n    // this.post=this.object.postData(postUrl,requestBody).subscribe((data)=>{})\n    this.object.postData(postUrl, requestBody).subscribe({\n      next: response => {\n        console.log('POST request successful:', response);\n      },\n      error: error => {\n        console.error('POST request error:', error);\n      }\n    });\n    this.object.getUserFromDatabase().subscribe(data => {\n      this.getUsers = data;\n      // console.warn(this.getUser);\n    });\n\n    console.warn('bodyyyyyyyy', requestBody);\n    // console.log('ssssssss',this.pass);\n  }\n}\n\nGetusersComponent.ɵfac = function GetusersComponent_Factory(t) {\n  return new (t || GetusersComponent)(i0.ɵɵdirectiveInject(i1.ServiceService));\n};\nGetusersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GetusersComponent,\n  selectors: [[\"app-get-users\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"\"], [\"type\", \"text\", \"placeholder\", \"UserName\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"createButton\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function GetusersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"getusers works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function GetusersComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.userName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function GetusersComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.pass = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"click\", function GetusersComponent_Template_input_click_5_listener() {\n        return ctx.Createauser();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h3\");\n      i0.ɵɵtext(7, \"get User From Database\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, GetusersComponent_tr_16_Template, 7, 3, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.userName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.pass);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getUser);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  border: 2px solid;\\n}\\ntable[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border: 1px solid;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2V0LXVzZXJzL2dldC11c2Vycy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FBQ0o7QUFBSTtFQUNJLGlCQUFBO0FBRVI7O0FBRUE7RUFDSSxrQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUsdGh7XG4gICAgYm9yZGVyOiAycHggc29saWQ7XG4gICAgdGR7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkO1xuICAgIH1cbiAgIFxufVxuaDN7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { GetusersComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","person_r1","id","username","password","GetusersComponent","constructor","object","getUsers","getTenUser","post","pass","userName","ngOnInit","getDataFromjson","subscribe","data","getUserFromDatabase","Createauser","postUrl","requestBody","postData","next","response","console","log","error","warn","ɵɵdirectiveInject","i1","ServiceService","selectors","decls","vars","consts","template","GetusersComponent_Template","rf","ctx","ɵɵlistener","GetusersComponent_Template_input_ngModelChange_3_listener","$event","GetusersComponent_Template_input_ngModelChange_4_listener","GetusersComponent_Template_input_click_5_listener","ɵɵtemplate","GetusersComponent_tr_16_Template","ɵɵproperty","getUser"],"sources":["/home/trainingbatchmarch2023/Documents/angular/crud-angular/angular-crud/src/app/get-users/get-users.component.ts","/home/trainingbatchmarch2023/Documents/angular/crud-angular/angular-crud/src/app/get-users/get-users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ServiceService, Users, getUser, postData } from '../service.service';\n// import { log } from 'console';\n\n@Component({\n  selector: 'app-get-users',\n  templateUrl: './get-users.component.html',\n  styleUrls: ['./get-users.component.scss']\n})\nexport class GetusersComponent implements OnInit {\n\n  getUsers: getUser[] = [];\n  getTenUser: Users[] = [];\n  post: postData[] = [];\n  pass: string = ''\n  userName: string = '';\n\n\n  constructor(public object: ServiceService) { }\n  ngOnInit(): void {\n\n    this.object.getDataFromjson().subscribe((data: Users[]) => {\n      this.getTenUser = data;\n    })\n\n    this.object.getUserFromDatabase().subscribe((data: getUser[]) => {\n      this.getUsers = data;\n      // console.warn(this.getUser);\n    })\n\n  };\n\n  Createauser() {\n    const postUrl = 'http://localhost:3000/adduser';\n    const requestBody = {\n      username: this.userName,\n      password: this.pass,\n    };\n    // this.post=this.object.postData(postUrl,requestBody).subscribe((data)=>{})\n    this.object.postData(postUrl, requestBody).subscribe({\n      next: (response: postData[]) => {\n        console.log('POST request successful:', response);\n      },\n      error: (error: postData[]) => {\n        console.error('POST request error:', error);\n      }\n    });\n    this.object.getUserFromDatabase().subscribe((data: getUser[]) => {\n      this.getUsers = data;\n      // console.warn(this.getUser);\n    })\n    console.warn('bodyyyyyyyy', requestBody);\n    // console.log('ssssssss',this.pass);\n\n\n  }\n}\n\n\n","<p>getusers works!</p>\n<!-- {{getTenUser | json}} -->\n\n<!-- <table>\n    <h3>get 10 User data</h3>\n    <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>City</th>\n    </tr>\n    <tr *ngFor=\"let person of  getTenUser\">\n        <td>{{person.id}}</td>\n        <td>{{ person.name }}</td>\n        <td>{{ person.email }}</td>\n        <td>{{ person.address.city }}</td>\n    </tr>\n</table> -->\n\n<!-- <h5>Users: {{getUser|json}}........</h5> -->\n<div class=\"\">\n    <input type=\"text\" [(ngModel)]=\"userName\" placeholder=\"UserName\">\n    <input type=\"password\" [(ngModel)]=\"pass\">\n    <input type=\"button\" (click)=\"Createauser()\" value=\"createButton\">\n    <!-- {{uName}} -->\n    <!-- {{requestBody|json}} -->\n    <h3>get User From Database</h3>\n    <table>\n        <tr>\n            <th>ID</th>\n            <th>UserName</th>\n            <th>Password</th>\n        </tr>\n        <tr *ngFor=\"let person of  getUser\">\n            <td>{{person.id}}</td>\n            <td>{{ person.username }}</td>\n            <td>{{ person.password }}</td>\n        </tr>\n    </table>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}