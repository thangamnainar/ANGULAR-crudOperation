{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { error } from 'console';\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.stutendData = [{\n      \"name\": \"John Doe\",\n      \"age\": 30,\n      \"address\": \"123 Main St\"\n    }, {\n      \"name\": \"Jane Smith\",\n      \"age\": 25,\n      \"address\": \"456 Elm St\"\n    }, {\n      \"name\": \"Jane \",\n      \"age\": 24,\n      \"address\": \"59 Elm St\"\n    }, {\n      \"name\": \"siva\",\n      \"age\": 20,\n      \"address\": \"46 Elm St\"\n    }, {\n      \"name\": \"sivanesh\",\n      \"age\": 20,\n      \"address\": \"46 Elm St\"\n    }, {\n      \"name\": \"mohan\",\n      \"age\": 20,\n      \"address\": \"46 Elm St\"\n    }, {\n      \"name\": \"ram\",\n      \"age\": 20,\n      \"address\": \"46 Elm St\"\n    }, {\n      \"name\": \"karuppan\",\n      \"age\": 20,\n      \"address\": \"46 Elm St\"\n    }];\n    this.personData = [{\n      name: 'siva',\n      age: 24\n    }, {\n      name: 'jaddu',\n      age: 30\n    }, {\n      name: 'ram',\n      age: 20\n    }, {\n      name: 'maya',\n      age: 20\n    }, {\n      name: 'raj',\n      age: 43\n    }, {\n      name: 'rutu',\n      age: 30\n    }, {\n      name: 'karuppan',\n      age: 28\n    }, {\n      name: 'siva kumar',\n      age: 40\n    }];\n    // url='http://localhost:4200/assets/test.json';\n    this.url = \"https://jsonplaceholder.typicode.com/users\";\n  }\n  getStudendlist() {\n    return this.stutendData;\n  }\n  getPersonList() {\n    return this.personData;\n  }\n  getDataFromjson() {\n    // return this.http.get(this.url);\n    return this.http.get(this.url);\n  }\n  // postData(url: string, data: any): Observable<any> {\n  //   return this.http.post<any>(url, data);\n  // }\n  getUserFromDatabase() {\n    const url = 'http://localhost:3000/getusers';\n    return this.http.get(url);\n  }\n  postData(postUrl, requestBody) {\n    //   const postUrl = 'http://localhost:3000/adduser';\n    // const requestBody = {\n    //   username:'raj',\n    //   password:'1234'\n    // };\n    return this.http.post(postUrl, requestBody);\n    // .subscribe(\n    //   (response) =>{\n    //     console.log('POST request successful:', response);\n    // },\n    // (error)=>{\n    //   console.error('POST request error:', error);\n    // }  )\n  }\n}\n\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceService };\n;\n;\n;","map":{"version":3,"names":["ServiceService","constructor","http","stutendData","personData","name","age","url","getStudendlist","getPersonList","getDataFromjson","get","getUserFromDatabase","postData","postUrl","requestBody","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/trainingbatchmarch2023/Documents/angular/crud-angular/crud-operation/src/app/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from'@angular/common/http'\nimport { Observable, Observer } from 'rxjs';\n// import { error } from 'console';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  public stutendData:Student[] =  [\n    { \"name\": \"John Doe\", \"age\": 30, \"address\": \"123 Main St\" },\n    { \"name\": \"Jane Smith\", \"age\": 25, \"address\": \"456 Elm St\" },\n    { \"name\": \"Jane \", \"age\": 24, \"address\": \"59 Elm St\" },\n    { \"name\": \"siva\", \"age\": 20, \"address\": \"46 Elm St\" },\n    { \"name\": \"sivanesh\", \"age\": 20, \"address\": \"46 Elm St\" },\n    { \"name\": \"mohan\", \"age\": 20, \"address\": \"46 Elm St\" },\n    { \"name\": \"ram\", \"age\": 20, \"address\": \"46 Elm St\" },\n    { \"name\": \"karuppan\", \"age\": 20, \"address\": \"46 Elm St\" },\n  ];\n  public personData:Person[]=[\n    {name:'siva',age:24}, {name:'jaddu',age:30},\n    {name:'ram',age:20}, {name:'maya',age:20},\n    {name:'raj',age:43}, {name:'rutu',age:30},\n    {name:'karuppan',age:28}, {name:'siva kumar',age:40},\n  ];\n  // url='http://localhost:4200/assets/test.json';\n  url=\"https://jsonplaceholder.typicode.com/users\";\n\n  constructor(private http:HttpClient) { \n\n  }\n\n  getStudendlist(){\n    return this.stutendData;\n  };\n  getPersonList(){\n    return this.personData;\n  }\n  \n  getDataFromjson(): Observable<Users[]> {\n    // return this.http.get(this.url);\n    return this.http.get<Users[]>(this.url);\n  };\n\n  // postData(url: string, data: any): Observable<any> {\n  //   return this.http.post<any>(url, data);\n  // }\n\n  getUserFromDatabase() {\n    const url = 'http://localhost:3000/getusers';\n    return this.http.get<getUser[]>(url);\n  }\n  postData(postUrl:string,requestBody:any){\n  //   const postUrl = 'http://localhost:3000/adduser';\n\n  // const requestBody = {\n  //   username:'raj',\n  //   password:'1234'\n  // };\n\n    return this.http.post<postData[]>(postUrl, requestBody);\n  // .subscribe(\n  //   (response) =>{\n\n  //     console.log('POST request successful:', response);\n  // },\n  // (error)=>{\n  //   console.error('POST request error:', error);\n  // }  )\n\n\n  }\n\n  \n  \n}\n\nexport interface Student{\n  name:string;\n  age:number;\n  address:string;\n};\n\nexport interface Person{\n  name:string;\n  age:number;\n};\n\nexport interface Users{\n  id:number;\n  name:string;\n  email:string;\n  address:address;\n}\ninterface address{\n  street:string;\n  city:string;\n}\nexport interface getUser{\n  id:number;\n  name:string;\n  age:string;\n  gender:string;\n};\n\nexport interface postData{\n  name:string;\n  age:number;\n  gender:string;\n}"],"mappings":";;AAGA;AAEA,MAGaA,cAAc;EAqBzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAnBjB,KAAAC,WAAW,GAAc,CAC9B;MAAE,MAAM,EAAE,UAAU;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAa,CAAE,EAC3D;MAAE,MAAM,EAAE,YAAY;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAY,CAAE,EAC5D;MAAE,MAAM,EAAE,OAAO;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,EACtD;MAAE,MAAM,EAAE,MAAM;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,EACrD;MAAE,MAAM,EAAE,UAAU;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,EACzD;MAAE,MAAM,EAAE,OAAO;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,EACtD;MAAE,MAAM,EAAE,KAAK;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,EACpD;MAAE,MAAM,EAAE,UAAU;MAAE,KAAK,EAAE,EAAE;MAAE,SAAS,EAAE;IAAW,CAAE,CAC1D;IACM,KAAAC,UAAU,GAAU,CACzB;MAACC,IAAI,EAAC,MAAM;MAACC,GAAG,EAAC;IAAE,CAAC,EAAE;MAACD,IAAI,EAAC,OAAO;MAACC,GAAG,EAAC;IAAE,CAAC,EAC3C;MAACD,IAAI,EAAC,KAAK;MAACC,GAAG,EAAC;IAAE,CAAC,EAAE;MAACD,IAAI,EAAC,MAAM;MAACC,GAAG,EAAC;IAAE,CAAC,EACzC;MAACD,IAAI,EAAC,KAAK;MAACC,GAAG,EAAC;IAAE,CAAC,EAAE;MAACD,IAAI,EAAC,MAAM;MAACC,GAAG,EAAC;IAAE,CAAC,EACzC;MAACD,IAAI,EAAC,UAAU;MAACC,GAAG,EAAC;IAAE,CAAC,EAAE;MAACD,IAAI,EAAC,YAAY;MAACC,GAAG,EAAC;IAAE,CAAC,CACrD;IACD;IACA,KAAAC,GAAG,GAAC,4CAA4C;EAIhD;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,WAAW;EACzB;EACAM,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,UAAU;EACxB;EAEAM,eAAeA,CAAA;IACb;IACA,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAU,IAAI,CAACJ,GAAG,CAAC;EACzC;EAEA;EACA;EACA;EAEAK,mBAAmBA,CAAA;IACjB,MAAML,GAAG,GAAG,gCAAgC;IAC5C,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAYJ,GAAG,CAAC;EACtC;EACAM,QAAQA,CAACC,OAAc,EAACC,WAAe;IACvC;IAEA;IACA;IACA;IACA;IAEE,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAaF,OAAO,EAAEC,WAAW,CAAC;IACzD;IACA;IAEA;IACA;IACA;IACA;IACA;EAGA;;;AAhEWf,cAAc,C;mBAAdA,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdpB,cAAc,C;SAAdA,cAAc;EAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPvB,cAAc;AA0E1B;AAKA;AAiBA"},"metadata":{},"sourceType":"module","externalDependencies":[]}